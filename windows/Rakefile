#!/usr/bin/ruby

require 'pp'
require 'fileutils'
include FileUtils
require 'erb'
require_relative '../windows/utils.rb'

start_time = Time.now
binaries = {:lang => 'lang/Release/yabasic.exe', :setup => 'setup/Release/setup.exe', :wrapper => 'wrapper/Release/wrapper.exe' }

desc 'Check git'
task :git do 
  sh "/usr/bin/git diff --exit-code --quiet" do |ok,res|
    if !ok
      sh "git status"
      warn "Uncommited local changes, please fix with 'git add' etc."
    end
  end
end

desc 'Build yabasic'
task :build => :git do
  binaries.each do |key,bin|
    vcxproj = {:lang => 'yabasic', :setup => 'setup', :wrapper => 'wrapper' }
    rm bin if File.exist?(bin)
    sh '/cygdrive/c/Program Files (x86)/MSBuild/14.0/Bin/MSBuild.exe',
       "c:/work/yabasic/windows/#{key.to_s}/#{vcxproj[key]}.vcxproj",
       '/p:Configuration=Release'
    fail "File '#{bin}' has not been build" if File.mtime(bin) < start_time
  end
end

version = nil
desc 'Collect Versions'
task :versions => :build do
  File.open('version.yab','w') { |f| f.puts 'open 1,"yabasic.version","w":print #1 peek$("version"):close 1:exit' }
  sh 'cygstart --wait ./lang/Release/yabasic.exe version.yab'
  version=File.new('yabasic.version').read.chomp.strip
  puts "Version = " + version
end

desc 'Run tests for windows'
task :tests => :versions do
  run_tests './lang/tests', '../Release/yabasic.exe'
end

desc 'Pack binaries'
task :pack => :tests do
  cp '../unix/lang/LICENSE', '/cygdrive/c/Windows/Temp/LICENSE.txt'
  File.open('yabasic-setup.SED','w') do |file|
    file.write ERB.new(File.read('resources/yabasic-setup.SED.erb')).result(binding)
  end
  File.open('resources/yabver.txt','w') { |f| f.puts version }
  sh 'iexpress /N yabasic-setup.SED'
end

desc 'Cleanup and Show products'
task :default => :pack do
  cleanup "../products/yabasic-*-setup.exe"
  sh 'ls -l ../products ' + binaries.values.join(" ")
end
