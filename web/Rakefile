#!/usr/bin/ruby

require 'pp'
require 'fileutils'
include FileUtils
require 'erb'
require 'find'

desc 'Check git'
task :git do 
  sh "/usr/bin/git diff --exit-code --quiet" do |ok,res|
    if !ok
      sh "git status"
      warn "Uncommited local changes, please fix with 'git add' etc."
    end
  end
end

version = nil
desc 'Update versions'
task :version => :git do
  version = File.read('../windows/resources/yabver.txt').chomp.strip
  puts "Version #{version}"
end

desc 'Check and edit changelog'
task :changelog => :version do
  %w( log.html content_whatsnew.html ).each do |name|
    File.open(name) do |file|
      unless file.read.include?(version)
        sh "emacs -nw #{name}"
      end
    end
  end
end

desc 'Process erb templates'

# colors from https://color.adobe.com
# Tests with browserstack.com

colors_legacy = { :toc_bg => "#FFBD7C",
                  :head_bg => "#79BD8F",
                  :head_biggest => "#00A388",
                  :head_small => "#46573B",
                  :head_bigger => "#46573B"}

# https://color.adobe.com/de/Neutral-Blue-color-theme-22361/
colors_neutral_blue = { :toc_bg => "#D1DBBD",
                        :head_bg => "#91AA9D",
                        :head_biggest => "#3E606F", 
                        :head_small => "#193441",
                        :head_bigger => "#193441"}

# https://color.adobe.com/de/Ocean-Sunset-color-theme-46355/
colors_ocean_sunset = { :toc_bg => "#9C9B7A",
                        :head_bg => "#FFD393",
                        :head_biggest => "#FF974F",
                        :head_small => "#F54F29",
                        :head_bigger => "#F54F29"}

#https://color.adobe.com/de/Midori-and-Madoka-color-theme-2044087/
colors_midori_and_madoka = { :toc_bg => "#3E8C84",
                             :head_bg => "#296B73",
                             :head_biggest => "#194759",
                             :head_small => "#0F2D40",
                             :head_bigger => "#0F2D40"}

#https://color.adobe.com/de/sun-splash-color-theme-1568873/
colors_sun_splash = { :toc_bg => "#FFC861",
                      :head_bg => "#A5C77F",
                      :head_biggest => "#42826C",
                      :head_small => "#002F32",
                      :head_bigger => "#002F32"}

colors_blueish = { :toc_bg => "#29D9C2",
                   :head_bg => "#01AEB2",
                   :head_biggest => "#29D9C2",
                   :head_small => "#FFFFA6",
                   :head_bigger => "#FFFFA6"}

colors_blue = { :toc_bg => "#29D9C2",
                :head_bg => "#01AEB2",
                :head_biggest => "#29D9C2",
                :head_small => "#016466",
                :head_bigger => "#016466"}

colors = colors_blueish

task :templates => :changelog do
  %w( content_download.html.erb  head.html.erb toc.html.erb ).each do |name|
    result = name.chomp('.erb')
    File.open(result,'w') do |file|
      file.write ERB.new(File.read(name)).result(binding)
    end
  end

  structure=File.read('structure.html.erb')
  %w( index.html download.html whatsnew.html support.html screenshots.html copyright.html related.html faq.html history.html log.html manual_yabasic.html new_docu.html old_docu.html mit.html ).each do |name|
    if name == 'manual_yabasic.html'
      frame_html = 'yabasic.htm'
    elsif name == 'index.html'
      frame_html = 'content_whatsnew.html'
    else
      frame_html = 'content_#{name}'
    end
    
    puts "#{name} wraps #{frame_html}"
    File.open(name,'w') do |file|
      file.write ERB.new(structure).result(binding)
    end
  end
end

desc 'Copy content'
task :copy => :templates do
  todir = '../products/web'
  rm_rf todir if File.exists?(todir)
  cp_r '../web','../products'
  Dir["#{todir}/*.erb"].each do |file|
    rm file
  end
  rm "#{todir}/Rakefile"
  %w( *.gz *.deb *.rpm *.exe ).each do |glob|
    Dir["../products/#{glob}"].each do |file|
      cp file, "#{todir}/download"
    end
  end
  cp '../products/yabasic.htm', todir
end

desc 'Invoke site'
task :default => :copy do
end
